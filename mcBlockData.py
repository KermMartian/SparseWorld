
mcBlocks = [[120, 120, 120,   1,  0], \
            [115, 115, 115,   4,  0], \
            [0x0D,0x2C,0x7B, 22,  0], \
            [0xDE,0xD6,0xA1, 24,  0], \
			[221, 221, 221,  35,  0], \
			[219, 125, 62,   35,  1], \
			[179,  80, 188,  35,  2], \
			[107, 138, 201,  35,  3], \
			[177, 166,  39,  35,  4], \
			[ 65, 174,  56,  35,  5], \
			[217, 131, 155,  35,  6], \
			[ 66,  66,  66,  35,  7], \
			[166, 166, 166,  35,  8], \
			[ 39, 117, 149,  35,  9], \
			[129,  54, 196,  35, 10], \
			[ 39,  51, 161,  35, 11], \
			[ 86,  51,  28,  35, 12], \
			[ 56,  77,  24,  35, 13], \
			[164,  45,  41,  35, 14], \
			[ 25,  22,  22,  35, 15], \
            [0xFF,0xFF,0xFF, 42,  0], \
			[170,  86,  62,  45,  0], \
			[115, 169, 115,  48,  0], \
			[0x11,0x11,0x1A, 49,  0], \
			[155, 166, 176,  82,  0], \
			[127, 127, 127,  98,  0], \
            [0xFF,0x00,0x00,152,  0]]

mcRurals = [[120, 120, 120,   1,  0], \
            [ 64,  81,  96,   2,  0], \
            [ 70, 106, 100,   2,  0], \
			[105, 160,  91,   2,  0], \
            [115, 115, 115,   4,  0], \
            [0x0D,0x2C,0x7B, 22,  0], \
            [0xDE,0xD6,0xA1, 24,  0], \
			[ 65, 174,  56,  35,  5], \
			[ 56,  77,  24,  35, 13], \
            [0xFF,0xFF,0xFF, 42,  0], \
			[170,  86,  62,  45,  0], \
			[115, 169, 115,  48,  0], \
			[0x11,0x11,0x1A, 49,  0], \
			[155, 166, 176,  82,  0], \
			[127, 127, 127,  98,  0], \
            [0xFF,0x00,0x00,152,  0]]

def nearest(r, g, b, rural=False):
	dataval = 0
	damageval = 0
	diff = 1e99
	for block in (mcRurals if rural else mcBlocks):
		ndiff = (r-block[0])**2 + (g-block[1])**2 + (b-block[2])**2
		if ndiff < diff:
			diff = ndiff
			dataval = block[3]
			damageval = block[4]
	return [dataval,damageval]
